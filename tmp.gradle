uploadArchives {
    repositories.mavenDeployer {
        pom.groupId = groupId
        pom.artifactId = project.PUBLISH_ARTIFACT_ID
        pom.version = version
        repository(url: "file://${localPublicRepo}")
    }
}

android.buildTypes.all { buildType ->
    task ("prepare${buildType.name.capitalize()}") << {
        android.defaultPublishConfig = "${buildType.name}"
        if ("${buildType.name}" == "release") {
            uploadArchives.repositories.mavenDeployer.pom.artifactId = project.PUBLISH_ARTIFACT_ID
        } else {
            uploadArchives.repositories.mavenDeployer.pom.artifactId = project.PUBLISH_ARTIFACT_ID + "-${buildType.name}"
        }
        if ("${buildType.minifyEnabled}" == "true") {
            uploadArchives.repositories.mavenDeployer.repository.url = "file://${localPublicRepo}"
        } else {
            uploadArchives.repositories.mavenDeployer.repository.url = "file://${localPrivateRepo}"
        }
    }

    task ("generate${buildType.name.capitalize()}") {
        dependsOn "prepare${buildType.name.capitalize()}"
        dependsOn uploadArchives
    }
}




task prepareDefaultConfig << {
    if (android.defaultPublishConfig == "release") {
        uploadArchives.repositories.mavenDeployer.pom.artifactId = project.PUBLISH_ARTIFACT_ID
        uploadArchives.repositories.mavenDeployer.repository.url = "file://${localPublicRepo}"
    } else {
        uploadArchives.repositories.mavenDeployer.pom.artifactId = project.PUBLISH_ARTIFACT_ID + "-" + android.defaultPublishConfig
        uploadArchives.repositories.mavenDeployer.repository.url = "file://${localPrivateRepo}"
    }
}

task generateDefaultConfig {
    dependsOn prepareDefaultConfig, uploadArchives
}


